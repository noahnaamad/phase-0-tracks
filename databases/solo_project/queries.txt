Display the information in one table (either table is fine).
sqlite> SELECT * FROM fave_cats
   ...> ;
1|Spanky|12|true|1
2|Treasa|1|false|1
3|Charlie|10|true|2
4|Major|8|true|2
5|Lizzie|6|true|3

Update an item that meets some condition (you can choose a condition that makes sense).
sqlite> UPDATE fave_cats SET age=2 WHERE name="Treasa";
sqlite> SELECT * FROM fave_cats;
1|Spanky|12|true|1
2|Treasa|2|false|1
3|Charlie|10|true|2
4|Major|8|true|2
5|Lizzie|6|true|3

Display the information in both tables using one query.
sqlite> SELECT * FROM fave_cats, owners WHERE fave_cats.owner_id = owners.id;
1|Spanky|12|true|1|1|Noah
2|Treasa|2|false|1|1|Noah
3|Charlie|10|true|2|2|Bree
4|Major|8|true|2|2|Bree
5|Lizzie|6|true|3|3|Iris

Display a narrower selection of columns 
(fewer columns than all of them, in other words) from both tables using one query.
sqlite> SELECT fave_cats.name, fave_cats.age, owners.name FROM fave_cats, owners WHERE fave_cats.owner_id = owners.id;
name|age|name
Spanky|12|Noah
Treasa|2|Noah
Charlie|10|Bree
Major|8|Bree
Lizzie|6|Iris

Delete an item that meets some condition (you can choose a condition that makes sense).
sqlite> DELETE FROM fave_cats WHERE age>9;
sqlite> SELECT * FROM fave_cats;
id|name|age|fluffy|owner_id
2|Treasa|2|false|1
4|Major|8|true|2
5|Lizzie|6|true|3
(i know.... i'm heartless)


Playing with JOIN statements
sqlite> SELECT *
   ...> FROM fave_cats
   ...> LEFT JOIN owners ON fave_cats.owner_id = owners.id;
id|name|age|fluffy|owner_id|id|name
2|Treasa|2|false|1|1|Noah
4|Major|8|true|2|2|Bree
5|Lizzie|6|true|3|3|Iris

sqlite> SELECT *
   ...> FROM fave_cats
   ...> CROSS JOIN owners;
id|name|age|fluffy|owner_id|id|name
2|Treasa|2|false|1|1|Noah
2|Treasa|2|false|1|2|Bree
2|Treasa|2|false|1|3|Iris
4|Major|8|true|2|1|Noah
4|Major|8|true|2|2|Bree
4|Major|8|true|2|3|Iris
5|Lizzie|6|true|3|1|Noah
5|Lizzie|6|true|3|2|Bree
5|Lizzie|6|true|3|3|Iris


